const TimeNotifyId="time-notification",AlarmName={Time:"time",ClearTimeNotification:"clear-time-notification",Badge:"badge",Watchdog:"watchdog"};
class Clock{static validateTime(a){let b=a.getMinutes();if(60>Settings.timePeriod)return 0==b%Settings.timePeriod;a=a.getHours();let c=Settings.timePeriod/60;return 0==b&&0==a%c}static sayTime(a){a=timeToScript(a,Settings.tts.lang);chrome.tts.speak(a,Settings.tts)}static alarmForTime(){let a=new Date;if(Clock.validateTime(a)){let b,c,d;chrome.idle.queryState(300,function(e){d="locked"==e;Clock.timeDndCheck(b,c,d,a)});chrome.tabs.query({audible:!0,muted:!1},function(e){b=0<e.length;Clock.timeDndCheck(b,
c,d,a)});chrome.windows.getAll(function(e){c=e.some(f=>"fullscreen"==f.state);Clock.timeDndCheck(b,c,d,a)})}}static timeDndCheck(a,b,c,d){void 0==a||void 0==b||void 0==c||Settings.timeDndAudible&&a||Settings.timeDndFullscreen&&b||Settings.timeDndLocked&&c||TimeNotify.notify(d)}}function timeToBadge(a){let b=a.getHours();Settings.hour12&&12<b&&(b%=12);a=a.getMinutes();return`${b}:${10>a?"0"+a:a}`}
function timeToScript(a,b){let c=a.getHours();Settings.hour12&&12<c&&(c%=12);a=a.getMinutes();let d=`${c}:${10>a?"0"+a:a}`;if("zh-CN"==b)d=0==a?c+"\u70b9\u4e86":10>a?`${c}\u70b9\u96f6${a}\u5206`:`${c}\u70b9${a}\u5206`;else if("en"==b||b.startsWith("en-"))0==a?d=0==c?"midnight":`${c} o'clock`:10>a&&(d=`${c} oh ${a}`);return d}
class TimeNotify{static notify(a){Settings.muteAll||(Settings.timeVoiceNotify&&Clock.sayTime(a),Settings.timeSystemNotify&&TimeNotify.systemNotify(a))}static systemNotify(a){a=timeToBadge(a);a={type:"basic",iconUrl:"/icon/clock.png",title:chrome.i18n.getMessage("notify_time_title"),buttons:[{title:chrome.i18n.getMessage("notify_button_settings")}],message:a};chrome.notifications.create(TimeNotifyId,a,function(b){b=new Date;b.setMinutes(b.getMinutes()+2,0,0);chrome.alarms.create(AlarmName.ClearTimeNotification,
{when:b.getTime()})})}}
class Alarm{static startTimeTimer(){var a=new Date;if(60>Settings.timePeriod){var b=a.getMinutes(),c=Settings.timePeriod*Math.ceil(b/Settings.timePeriod);c==b&&(c+=Settings.timePeriod);a.setMinutes(c,0,0)}else{b=Settings.timePeriod/60;c=a.getHours();let d=b*Math.ceil(c/b);d==c&&(d+=b);a.setHours(d,0,0,0)}a=a.getTime();61E3>a-Date.now()&&(a+=6E4*Settings.timePeriod);chrome.alarms.create(AlarmName.Time,{when:a,periodInMinutes:Settings.timePeriod})}static stopTimeTimer(){chrome.alarms.clear(AlarmName.Time)}static startBadgeTimer(){let a=new Date;
chrome.action.setBadgeText({text:timeToBadge(a)});a.setMinutes(a.getMinutes()+2,0,0);chrome.alarms.create(AlarmName.Badge,{when:a.getTime(),periodInMinutes:1})}static stopBadgeTimer(){chrome.action.setBadgeText({text:""});chrome.alarms.clear(AlarmName.Badge)}static onAlarm(a){const b=a.name;if(b==AlarmName.Time)Clock.alarmForTime();else if(b==AlarmName.ClearTimeNotification)chrome.notifications.clear(TimeNotifyId);else if(b==AlarmName.Badge)updateBadge();else if(b==AlarmName.Watchdog)Alarm.isFromSleep(a)||
Alarm.check();else if(b.startsWith("task-"))Task.onAlarm(a,Settings[b]);else b.startsWith("clear-task-")&&TaskNotify.clearNotification(b)}static isFromSleep(a){return 3E4<Math.abs(Date.now()-a.scheduledTime)}static startDog(){chrome.alarms.get(AlarmName.Watchdog,function(a){a?2!=(new Date(a.scheduledTime)).getMinutes()%10&&Alarm.forceStartDog():Alarm.forceStartDog()})}static forceStartDog(){let a=new Date,b=a.getMinutes(),c=2;for(;2>c-b;)c+=10;a.setMinutes(c,0,0);chrome.alarms.create(AlarmName.Watchdog,
{when:a.getTime(),periodInMinutes:10})}static check(){chrome.storage.local.get(null,function(a){Helper.initSettings(a);chrome.tts.stop();a=(new Date).getTimezoneOffset();if(void 0===Settings.timezone)chrome.storage.local.set({timezone:a});else if(Settings.timezone!=a){startup();return}Settings.startupTime&&5184E5<Date.now()-Settings.startupTime?chrome.runtime.reload():chrome.alarms.getAll(function(b){var c=b.find(d=>d.name==AlarmName.Time);Settings.timeEnabled&&!c?(Alarm.startTimeTimer(),console.log("restart time alarm")):
!Settings.timeEnabled&&c?(Alarm.stopTimeTimer(),console.log("restop time alarm")):Settings.timeEnabled&&c&&!Clock.validateTime(new Date(c.scheduledTime))&&(Alarm.startTimeTimer(),console.log("not validate time alarm"));c=b.find(d=>d.name==AlarmName.Badge);Settings.badgeEnabled&&!c?(Alarm.startBadgeTimer(),console.log("restart badge alarm")):!Settings.badgeEnabled&&c?(Alarm.stopBadgeTimer(),console.log("restop badge alarm")):Settings.badgeEnabled&&c&&0!=(new Date(c.scheduledTime)).getSeconds()&&(Alarm.startBadgeTimer(),
console.log("not validate badge alarm"));Task.check(b.filter(d=>d.name.startsWith("task-")))})})}}function updateBadge(){chrome.action.setBadgeText({text:timeToBadge(new Date)})}function onCommand(a){if("say-time"==a){a=timeToScript(new Date,Settings.tts.lang);let b=Object.assign({},Settings.tts,{enqueue:!1});chrome.tts.speak(a,b)}}function onNotificationButtonClicked(a,b){chrome.runtime.openOptionsPage()};
